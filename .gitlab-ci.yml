# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Bash.gitlab-ci.yml

# See https://docs.gitlab.com/ee/ci/yaml/README.html for all available options

# you can delete this line if you're not using Docker
image: haskell:9

stages:
  - build
  - release

# determines where packages are installed, required for caching as that 
# can only happen for a folder inside the repository
variables:
  STACK_ROOT: "${CI_PROJECT_DIR}/.stack-root"

# cache everything stack related so that libraries do not need to be rebuild
cache:
  paths:
    - .stack-work/
    - .stack-root/

before_script:
  # install dependencies
  - cd source
  - stack update
  - stack build --only-dependencies

after_script:
  # clean out build files
  - stack clean

build:
  stage: build
  script:
    # build the project
    - stack install

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli
  when: manual
  # We recommend the use of `rules` to prevent these pipelines
  # from running. See the notes section below for details.
  script:
    - >
      release-cli create --name release-branch-$CI_JOB_ID --description release-branch-$CI_COMMIT_REF_NAME-$CI_JOB_ID
      --tag-name job-$CI_JOB_ID --ref $CI_COMMIT_SHA
      --assets-link '{"name":"Asset1","url":"https://<domain>/some/location/1","link_type":"other","filepath":"xzy"}'
      --assets-link '{"name":"Asset2","url":"https://<domain>/some/location/2"}'
      --milestone "v1.0.0" --milestone "v1.0.0-rc"
      --released-at "2020-06-30T07:00:00Z"

